{"version":3,"sources":["components/LayoutComponent/Header/Header.js","components/LayoutComponent/Footer/Footer.js","components/LayoutComponent/Layout.js","components/InstructionComponent/FROM/From.js","components/InstructionComponent/COPY/Copy.js","components/InstructionComponent/ADD/Add.js","components/InstructionComponent/WORKDIR/Workdir.js","components/InstructionComponent/LABEL/Label.js","components/InstructionComponent/ENV/Env.js","components/InstructionComponent/RUN/Run.js","components/InstructionComponent/CMD/Cmd.js","components/InstructionComponent/USER/User.js","components/InstructionComponent/ENTRYPOINT/Entrypoint.js","components/InstructionComponent/EXPOSE/Expose.js","components/InstructionComponent/VOLUME/Volume.js","components/InstructionComponent/ARG/Arg.js","components/NextSteps/NextSteps.js","components/Intro/Intro.js","components/References/References.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","color","style","margin","light","expand","NavbarBrand","fontSize","href","Nav","navbar","NavItem","NavLink","target","className","Footer","Container","Row","Col","react_markdown_default","source","title","src","width","height","frameBorder","marginHeight","marginWidth","Layout","props","children","From","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react","xs","sm","md","lg","Input","type","name","placeholder","value","base","onChange","e","handleChange","Component","Copy","dest","bind","assertThisInitialized","addCopyInstruction","preventDefault","setState","defineProperty","instruction","key","id","onAdd","Button","onClick","block","Add","addInstruction","Workdir","dir","Label","x","y","Env","Run","command","toggle","arr","split","JSON","stringify","cursor","Cmd","User","username","Entrypoint","Expose","port","Volume","Arg","NextSteps","Intro","allow","allowFullScreen","References","linkStyle","textDecoration","marginBottom","App","instructions","handleBaseImageChange","onInstructionSelect","onInstructionAdd","onReset","baseImage","concat","toConsumableArray","map","i","From_From","disabled","Copy_Copy","Add_Add","Workdir_Workdir","Label_Label","Env_Env","Run_Run","Cmd_Cmd","User_User","Entrypoint_Entrypoint","Expose_Expose","Volume_Volume","Arg_Arg","marginTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a9c81d58.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap'\n\nexport default () => {\n  const headerStyle = {\n      margin:\"10px 0\"\n  }  \n\n  const brandStyle = {\n      fontSize:\"30px\"\n  }\n  return (\n    <Navbar color=\"light\" style={headerStyle}  light expand=\"md\">\n        <NavbarBrand style={brandStyle} href=\"/\">Dexter's <span style={{\"color\":\"#077cbc\"}}>Docker</span> Lab</NavbarBrand>\n        <Nav navbar>\n            <NavItem>\n            <NavLink target=\"blank\" href=\"https://github.com/devopshelf/docker-cheatsheet/blob/master/README.md\">Cheatsheet</NavLink>\n            </NavItem>\n            <NavItem>\n            <NavLink target=\"blank\" href=\"https://github.com/devopshelf/dockerfile-examples\">Examples</NavLink>\n            </NavItem>\n            <NavItem>\n            <NavLink target=\"blank\" href=\"https://github.com/devopshelf\">\n              <i style={{\"color\":\"#077cbc\"}} className=\"fab fa-github\"></i>\n            </NavLink>\n            </NavItem>\n        </Nav>\n    </Navbar>\n  )\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default () => {\n  return (\n    <Container>\n        <Row>\n          <Col>\n              <h5 style={{\"color\":\"#077cbc\"}}>Contact Us</h5>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <ReactMarkdown source={\n                    `We provide free tutorials and solutions for Full Stack *Web Development, AWS Cloud\n                    and CI/CD best practices*. Docker labs is an online Dockerfile Generator and provides\n                    list of Docker cheatsheets and Dockerfile Examples.\n                    **Contact Us for more details**.  \n                    `\n                } />\n            </Col>\n        </Row>  \n        <Row>\n          <iframe className=\"col-lg-12 col-md-12 col-sm-12\" title=\"contact us form\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSfmvY3rWTFIe2ep4h7Hf2Y2dsgkS_16YTYDksWwzRSDVkkv_w/viewform?embedded=true\" width=\"800\" height=\"400\" frameBorder=\"0\" marginHeight=\"0\" marginWidth=\"0\">Loading...</iframe>\n        </Row>\n        <p className=\"text-center\">Made with <i style={{\"color\":\"#077cbc\"}} className=\"fas fa-heart\"></i> for Docker Developers</p>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Container } from 'reactstrap';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\n\nexport default (props) => {  \n  return (\n    <Container>\n      <Header />\n      {props.children}\n      <hr />\n      <Footer />\n    </Container>\n  )\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class From extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       \n    }\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n                <ReactMarkdown \n                source = 'The **FROM** instruction initializes a new build stage and sets the Base Image for subsequent instructions. As such, a valid Dockerfile must start with a **FROM** instruction.'  />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <ReactMarkdown source = '`FROM <image>[:<tag>] [AS <name>]`'/>\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Base Image:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"base\" \n                placeholder=\"For Example: node:alpine\"  \n                value={this.props.base}\n                onChange={(e)=>{\n                  this.props.handleChange(e.target.value)\n                }}\n                />\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Copy extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       src:\"\",\n       dest:\"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addCopyInstruction = this.addCopyInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addCopyInstruction(){\n    var instruction = <p key={this.props.id}>COPY{' '}{this.state.src}{' '}{this.state.dest}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        src:\"\",\n        dest:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source=\n            {\n                `The **COPY** instruction copies new files or directories from **<src>** and \n                adds them to the filesystem of the container at the path **<dest>**.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source='`COPY <src>... <dest>`' /> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Source:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"src\" \n                placeholder=\"/src\"  \n                value={this.state.src}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Destination:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"dest\" \n                placeholder=\"/dest\"\n                value={this.state.dest}\n                onChange={this.handleChange}  \n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addCopyInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Add extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       src:\"\",\n       dest:\"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>ADD{' '}{this.state.src}{' '}{this.state.dest}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        src:\"\",\n        dest:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n                <ReactMarkdown \n                source = 'The **ADD** instruction copies new files, directories or remote file URLs from **<src>** and adds them to the filesystem of the image at the path **<dest>**.'  />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <ReactMarkdown source = '`ADD <src> <dest>`'/>\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Source:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"src\" \n                placeholder=\"/src\"  \n                value={this.state.src}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Destination:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"dest\" \n                placeholder=\"/dest\"\n                value={this.state.dest}\n                onChange={this.handleChange}  \n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Workdir extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       dir:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>WORKDIR{' '}{this.state.dir}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        dir:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **WORKDIR** instruction sets the working directory for any RUN, \n                CMD, ENTRYPOINT, COPY and ADD instructions that follow it in \n                the Dockerfile. If the **WORKDIR** doesn’t exist, it will be created \n                even if it’s not used in any subsequent Dockerfile instruction.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = '`WORKDIR /path/to/workdir`' /> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Directory:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"dir\" \n                placeholder=\"/dir\"  \n                value={this.state.dir}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Label extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       x:\"\",\n       y:\"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>Label{' '}{this.state.x}{'='}\"{this.state.y}\"</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        x:\"\",\n        y:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **LABEL** instruction adds metadata to an image. \n                A **LABEL** is a *key-value* pair. To include spaces within\n                 a **LABEL** value, use quotes and backslashes as you would in command-line parsing.`\n            } />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <ReactMarkdown source='`LABEL <key>=<value>`' />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Key:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"x\" \n                placeholder=\"Key\"  \n                value={this.state.x}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Value:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"y\" \n                placeholder=\"Value\"\n                value={this.state.y}\n                onChange={this.handleChange}  \n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Env extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       x:\"\",\n       y:\"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>ENV{'  '}{this.state.x}{'  '}{this.state.y}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        x:\"\",\n        y:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **ENV** instruction sets the environment variable **<key>** to the value **<value>**. \n                This value will be in the environment for all subsequent instructions in the \n                build stage and can be replaced inline in many as well.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source='`ENV <key> <value>`' /> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Key:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"x\" \n                placeholder=\"Key\"  \n                value={this.state.x}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Value:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"y\" \n                placeholder=\"Value\"\n                value={this.state.y}\n                onChange={this.handleChange}  \n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Run extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       command:\"\",\n       toggle:false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = '';  \n    if(this.state.toggle){\n        var arr = this.state.command.split(\" \");\n        instruction = <p key={this.props.id}>RUN{' '}{JSON.stringify(arr)}</p>;\n    }else{\n        instruction = <p key={this.props.id}>RUN{' '}{this.state.command}</p>;\n    } \n    this.props.onAdd(instruction);\n    this.setState({\n        dir:\"\"\n    })\n  }\n\n  toggle(){\n      this.setState({\n          toggle:!this.state.toggle\n      })\n  }\n    \n  render() {\n    const togglerStyle={\n        \"margin\":\"0 10px\",\n        \"color\":\"tomato\",\n        \"fontSize\":\"22px\",\n        \"cursor\":\"pointer\"\n    }  \n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **RUN** instruction will execute any commands in a new layer on top of the current image\n                 and commit the results. The resulting committed image will be used for the next step in\n                  the _Dockerfile_.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = 'Shell Form `RUN <command>`' /> \n               <ReactMarkdown source = 'Exec Form `RUN [\"executable\", \"param1\", \"param2\"]`' />\n               <p>(shell form)\n                   <i onClick={this.toggle} \n                   style={togglerStyle} \n                   className = {this.state.toggle ? \"fas fa-toggle-on\" : \"fas fa-toggle-off\"}></i>\n                (exec form)</p> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Command:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"command\" \n                placeholder=\"command\"  \n                value={this.state.command}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Cmd extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       command:\"\",\n       toggle:false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = '';  \n    if(this.state.toggle){\n        var arr = this.state.command.split(\" \");\n        instruction = <p key={this.props.id}>CMD{' '}{JSON.stringify(arr)}</p>;\n    }else{\n        instruction = <p key={this.props.id}>CMD{' '}{this.state.command}</p>;\n    } \n    this.props.onAdd(instruction);\n    this.setState({\n        dir:\"\"\n    })\n  }\n\n  toggle(){\n      this.setState({\n          toggle:!this.state.toggle\n      })\n  }\n    \n  render() {\n    const togglerStyle={\n        \"margin\":\"0 10px\",\n        \"color\":\"tomato\",\n        \"fontSize\":\"22px\",\n        \"cursor\":\"pointer\"\n    }  \n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The main purpose of a **CMD** is to provide defaults for an executing container. \n                These defaults can include an executable, or they can omit the executable, \n                in which case you must specify an **ENTRYPOINT** instruction as well.\n                *There can only be one CMD instruction in a Dockerfile.* \n                If you list more than one CMD then only the last CMD will take effect.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = 'Shell Form `CMD <command>`' /> \n               <ReactMarkdown source = 'Exec Form(Recommended) `CMD [\"executable\", \"param1\", \"param2\"]`' />\n               <p>(shell form)\n                   <i onClick={this.toggle} \n                   style={togglerStyle} \n                   className = {this.state.toggle ? \"fas fa-toggle-on\" : \"fas fa-toggle-off\"}></i>\n                (exec form)</p> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Command:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"command\" \n                placeholder=\"command\"  \n                value={this.state.command}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class User extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       username:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>USER{' '}{this.state.username}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        x:\"\",\n        y:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **USER** instruction sets the user name (or UID) and optionally the user group\n                 (or GID) to use when running the image and for any **RUN**, **CMD** and **ENTRYPOINT** \n                 instructions that follow it in the *Dockerfile*.`\n            } />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <ReactMarkdown source='`USER <user>[:<group>] or`' />\n                <ReactMarkdown source='`USER <UID>[:<GID>]`' />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Username:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"username\" \n                placeholder=\"Username\"  \n                value={this.state.username}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Entrypoint extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       command:\"\",\n       toggle:false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = '';  \n    if(this.state.toggle){\n        var arr = this.state.command.split(\" \");\n        instruction = <p key={this.props.id}>ENTRYPOINT{' '}{JSON.stringify(arr)}</p>;\n    }else{\n        instruction = <p key={this.props.id}>ENTRYPOINT{' '}{this.state.command}</p>;\n    } \n    this.props.onAdd(instruction);\n    this.setState({\n        command:\"\"\n    })\n  }\n\n  toggle(){\n      this.setState({\n          toggle:!this.state.toggle\n      })\n  }\n    \n  render() {\n    const togglerStyle={\n        \"margin\":\"0 10px\",\n        \"color\":\"tomato\",\n        \"fontSize\":\"22px\",\n        \"cursor\":\"pointer\"\n    }  \n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `An **ENTRYPOINT** allows you to configure a container that will run as an executable.\n                Only the last **ENTRYPOINT** instruction in the *Dockerfile* will have an effect.\n                `\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = 'Shell Form `ENTRYPOINT command param1 param2`' /> \n               <ReactMarkdown source = 'Exec Form(Recommended) `ENTRYPOINT [\"executable\", \"param1\", \"param2\"]`' />\n               <p>(shell form)\n                   <i onClick={this.toggle} \n                   style={togglerStyle} \n                   className = {this.state.toggle ? \"fas fa-toggle-on\" : \"fas fa-toggle-off\"}></i>\n                (exec form)</p> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Command:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"command\" \n                placeholder=\"command\"  \n                value={this.state.command}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Expose extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       port:80,\n       toggle:false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = \"\";  \n    if(this.state.toggle){\n        instruction = <p key={this.props.id}>PORT{' '}{this.state.port}/udp</p>;\n    }else{\n        instruction = <p key={this.props.id}>PORT{' '}{this.state.port}</p>;;\n    }   \n    this.props.onAdd(instruction);\n    this.setState({\n        port:80\n    })\n  }\n\n  toggle(){\n    this.setState({\n        toggle:!this.state.toggle\n    })\n}\n    \n  render() {\n    const togglerStyle={\n        \"margin\":\"0 10px\",\n        \"color\":\"tomato\",\n        \"fontSize\":\"22px\",\n        \"cursor\":\"pointer\"\n    }   \n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **EXPOSE** instruction informs Docker that the container listens on the specified\n                 network ports at runtime. You can specify whether the port listens on TCP or \n                 UDP, and the default is TCP if the protocol is not specified.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = '`PORT <port-name>/<protocol>`' /> \n               <p>(TCP)\n                   <i onClick={this.toggle} \n                   style={togglerStyle} \n                   className = {this.state.toggle ? \"fas fa-toggle-on\" : \"fas fa-toggle-off\"}></i>\n                (UDP)</p> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                PORT:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"port\" \n                placeholder=\"PORT\"  \n                value={this.state.port}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Volume extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       dir:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>VOLUME{' '}{this.state.dir}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        dir:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **VOLUME** instruction creates a mount point with the specified name\n                 and marks it as holding externally mounted volumes from native host or\n                 other containers. The value can be a JSON array, \\`VOLUME [\"/var/log/\"]\\`,\n                 or a plain string with multiple arguments, such as \\`VOLUME /var/log\\` or\n                 \\`VOLUME /var/log /var/db\\`.`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = '`VOLUME /path`' /> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Directory:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"dir\" \n                placeholder=\"/dir\"  \n                value={this.state.dir}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component,Fragment } from 'react'\nimport {Row,Col,Input,Button} from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Arg extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       key:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addInstruction = this.addInstruction.bind(this);\n  }\n\n  handleChange(e){\n      e.preventDefault();\n      this.setState({\n          [e.target.name]:e.target.value\n      })\n  }\n\n  addInstruction(){\n    var instruction = <p key={this.props.id}>ARG{' '}{this.state.key}</p>;\n    this.props.onAdd(instruction);\n    this.setState({\n        key:\"\"\n    })\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <Row>\n            <Col>\n            <ReactMarkdown source = \n            {\n                `The **ARG** instruction defines a variable that users can pass at build-time\n                 to the builder with the \\`docker build\\` command using the\n                  \\`--build-arg <varname>=<value>\\` flag..`\n            }\n            />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n               <ReactMarkdown source = '`ARG <name>[=<default value>]`' /> \n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col xs=\"4\" sm=\"4\" md=\"4\" lg=\"4\">\n                Argument:\n            </Col>\n            <Col xs=\"8\" sm=\"8\" md=\"8\" lg=\"8\">\n                <Input type=\"text\" \n                name=\"key\" \n                placeholder=\"Arguments\"  \n                value={this.state.key}\n                onChange={this.handleChange}\n                />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <Button onClick={this.addInstruction} block>ADD</Button>\n            </Col>\n        </Row>\n      </Fragment>\n    )\n  }\n}\n","import React,{Fragment} from 'react'\nimport ReactMarkdown from 'react-markdown';\nimport { Row,Col } from 'reactstrap';\n\n\nexport default () => {\n  return (\n    <Fragment>\n      <Row>\n        <Col>\n            <h5 style={{\"color\":\"#077cbc\"}}>Next Steps</h5>\n        </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <ReactMarkdown source='##### Build the image' />\n                <ReactMarkdown source={\n                    `Now that you have your *Dockerfile*, you can build your image. \n                    The \\`docker build\\` command does the heavy-lifting of creating a \n                    docker image from a *Dockerfile*.\n                    `\n                } />\n                <ReactMarkdown source='`docker build -t username/<app-name> .`' />\n                <ReactMarkdown source={\n                    `The \\`docker build\\` command is quite simple - it takes an optional \n                    tag name with the -t flag, and the location of the directory containing\n                    the *Dockerfile* - the . indicates the current directory`\n                } />\n            </Col>\n        </Row>\n        <br/>\n        <Row>\n            <Col>\n                <ReactMarkdown source='##### Run your image' />\n                <ReactMarkdown source={\n                    `The next step in this section is to run the image and see if it actually works. `\n                } />\n                <ReactMarkdown source='`docker run -p 8888:5000 --name myfirstapp YOUR_USERNAME/myfirstapp`' />\n                <ReactMarkdown source={\n                    `The \\`docker run\\` command is quite simple - it takes an port \n                    tag name with the -p flag, and the name of the image.`\n                } />\n            </Col>\n        </Row>\n        <br />\n        <Row>\n            <Col>\n                <ReactMarkdown source='##### Push your image' />\n                <ReactMarkdown source={\n                    `Now that you've created and tested your image, you can push it to Docker Cloud.\n                    First you have to login to your Docker Cloud account, to do that: `\n                } />\n                <ReactMarkdown source='`docker login`' />\n                <ReactMarkdown source={\n                    `Enter \\`USERNAME\\` and \\`PASSWORD\\` When prompted.`\n                } />\n                <ReactMarkdown source='`docker push YOUR_USERNAME/myfirstapp`' />\n            </Col>\n        </Row>\n    </Fragment>\n  )\n}\n","import React,{Fragment} from 'react'\nimport { Row,Col } from 'reactstrap';\n\n\nexport default () => {\n  return (\n    <Fragment>\n      <Row>\n        <Col className=\"dockerfile__intro\" xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n            {`\n            Docker can build images automatically by reading the instructions from a Dockerfile.\n                A Dockerfile is a text document that contains all the commands a user could call \n                on the command line to assemble an image. Using docker build users can create an \n                automated build that executes several command-line instructions in succession.\n            `}\n        </Col>\n        <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\n          <iframe title= \"docker labs Intro\" width=\"380\" height=\"315\" src=\"https://www.youtube.com/embed/wCvNTehzDJg\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n        </Col>\n       </Row>\n    </Fragment>\n  )\n}\n","import React,{Fragment} from 'react'\nimport { Row,Col } from 'reactstrap';\n\n\nexport default () => {\n  const linkStyle={\n      \"textDecoration\":\"none\",\n      \"color\":\"black\"\n  }  \n  return (\n    <Fragment>\n        <Row>\n            <Col>\n                <h5 style={{\"color\":\"#077cbc\"}}>References</h5>\n            </Col>\n        </Row>\n        <Row>\n            <Col style={{\"marginBottom\":\"30px\"}}>\n                <a style={linkStyle} href=\"https://docs.docker.com/engine/reference/builder/\" target=\"blank\">1. Dockerfile Reference from Docker Documentation</a><br/>\n                <a style={linkStyle} href=\"https://github.com/docker/labs/blob/master/beginner/chapters/webapps.md\" target=\"blank\">2. Webapps with Docker</a>\n            </Col>\n        </Row>\n    </Fragment>\n  )\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col,Input,Button } from 'reactstrap';\nimport Layout from './components/LayoutComponent/Layout';\nimport From from './components/InstructionComponent/FROM/From';\nimport Copy from './components/InstructionComponent/COPY/Copy';\nimport Add from './components/InstructionComponent/ADD/Add';\nimport Workdir from './components/InstructionComponent/WORKDIR/Workdir';\nimport Label from './components/InstructionComponent/LABEL/Label';\nimport Env from './components/InstructionComponent/ENV/Env';\nimport Run from './components/InstructionComponent/RUN/Run';\nimport Cmd from './components/InstructionComponent/CMD/Cmd';\nimport User from './components/InstructionComponent/USER/User';\nimport Entrypoint from './components/InstructionComponent/ENTRYPOINT/Entrypoint';\nimport Expose from './components/InstructionComponent/EXPOSE/Expose';\nimport Volume from './components/InstructionComponent/VOLUME/Volume';\nimport Arg from './components/InstructionComponent/ARG/Arg';\nimport NextSteps from './components/NextSteps/NextSteps';\nimport Intro from './components/Intro/Intro';\nimport References from './components/References/References';\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       base:\"\",\n       instruction:\"\",\n       instructions:[],\n       key:1\n    }\n    this.handleBaseImageChange =  this.handleBaseImageChange.bind(this);\n    this.onInstructionSelect = this.onInstructionSelect.bind(this);\n    this.onInstructionAdd = this.onInstructionAdd.bind(this);\n    this.onReset = this.onReset.bind(this);\n   }\n  \n  handleBaseImageChange(baseImage){\n    this.setState({\n      base:baseImage\n    })\n  }\n\n  onInstructionSelect(e){\n    e.preventDefault();\n    this.setState({\n      instruction:e.target.value\n    })\n  }\n\n  onInstructionAdd(instruction){\n    this.setState({\n      instructions:[...this.state.instructions,instruction],\n      instruction:\"\",\n      key:this.state.key + 1\n    })\n  }\n\n  onReset(){\n    this.setState({\n      base:\"\",\n      instructions:[]\n    })\n  }\n\n  render() {\n    var instructions = this.state.instructions.map((i,key)=>{\n      return i;\n    })\n    return (\n        <Layout>\n          <Intro />\n          <br/>\n          <Row>\n            <Col>\n              <h5 style={{\"color\":\"#077cbc\"}}>ToolBox</h5>\n            </Col>\n          </Row>\n          <Row className=\"dockerfile__lab\">\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" className=\"dockerfile__form\">\n              <Container>\n                <From base={this.state.base} handleChange={this.handleBaseImageChange}/>\n                <br />\n                <Row>\n                  <Col>\n                    <Input type=\"select\" \n                    disabled={this.state.base === \"\"}\n                    name=\"instruction\" \n                    value={this.state.instruction}\n                    onChange={this.onInstructionSelect}\n                    >\n                      <option value=\"\">--SELECT--</option>\n                      <option value=\"Add\">ADD</option>\n                      <option value=\"Copy\">COPY</option>\n                      <option value=\"Workdir\">WORKDIR</option>\n                      <option value=\"Label\">LABEL</option>\n                      <option value=\"Env\">ENV</option>\n                      <option value=\"Run\">RUN</option>\n                      <option value=\"Cmd\">CMD</option>\n                      <option value=\"User\">USER</option>\n                      <option value=\"Entrypoint\">ENTRYPOINT</option>\n                      <option value=\"Expose\">EXPOSE</option>\n                      <option value=\"Volume\">VOLUME</option>\n                      <option value=\"Arg\">ARG</option>\n                    </Input>\n                  </Col>\n                </Row>\n                <br />\n                {\n                  this.state.instruction === \"Copy\" ? <Copy id={this.state.key} onAdd={this.onInstructionAdd} />\n                : this.state.instruction === \"Add\" ? <Add id={this.state.key} onAdd={this.onInstructionAdd} />\n                : this.state.instruction === \"Workdir\" ? <Workdir id={this.state.key} onAdd={this.onInstructionAdd} />  \n                :  this.state.instruction === \"Label\" ? <Label id={this.state.key} onAdd={this.onInstructionAdd} />\n                :  this.state.instruction === \"Env\" ? <Env id={this.state.key} onAdd={this.onInstructionAdd} />\n                :  this.state.instruction === \"Run\" ? <Run id={this.state.key} onAdd={this.onInstructionAdd} />                \n                :  this.state.instruction === \"Cmd\" ? <Cmd id={this.state.key} onAdd={this.onInstructionAdd} />                                \n                :  this.state.instruction === \"User\" ? <User id={this.state.key} onAdd={this.onInstructionAdd} />                                                \n                :  this.state.instruction === \"Entrypoint\" ? <Entrypoint id={this.state.key} onAdd={this.onInstructionAdd} />                                                      \n                :  this.state.instruction === \"Expose\" ? <Expose id={this.state.key} onAdd={this.onInstructionAdd} />                                                           \n                :  this.state.instruction === \"Volume\" ? <Volume id={this.state.key} onAdd={this.onInstructionAdd} />                                                                      \n                :  this.state.instruction === \"Arg\" ? <Arg id={this.state.key} onAdd={this.onInstructionAdd} />                                                                      \n                : \"\"\n                }\n                <Row style={{\"marginTop\":\"10px\"}}>\n                  <Col>\n                    <Button color=\"danger\" onClick={this.onReset} block>RESET</Button>\n                  </Col>\n                </Row>\n              </Container>\n            </Col>\n            <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"6\" className=\"dockerfile__file\">\n             <Container>\n               <Row>\n                 <Col className=\"dockerfile__file-title\">Dockerfile</Col>\n               </Row>\n               <hr />\n               {this.state.base !== \"\" ?<p>FROM {this.state.base}</p> : \"\"}\n               {instructions}\n             </Container>\n            </Col>\n          </Row>\n          <br />\n          <NextSteps />\n          <br/>\n          <References />\n        </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}